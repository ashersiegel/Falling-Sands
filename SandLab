import java.awt.*;
import java.util.*;

public class SandLab
{
    public static void main(String[] args)
    {
        SandLab lab = new SandLab(120, 240);
        lab.run();
    }

    //add constants for particle types here
    public static final int EMPTY = 0;
    public static final int METAL = 1;
    public static final int SAND = 2;
    public static final int WATER = 3;
    public static final int FIRE = 4;
    public static final int RAINBOW = 5;
    public static final int SMOKE = 6;
    public static final int SPONGE = 7;
    public static final int CLEAR = 8;
    
    
    
    private int red;
    private int green;
    private int blue;
    //do not add any more fields
    private int[][] grid;
    private SandDisplay display;

    public SandLab(int numRows, int numCols)
    {
        String[] names;
        grid = new int[numRows][numCols];
        names = new String[9];
        names[EMPTY] = "Empty";
        names[METAL] = "Metal";
        names[SAND] = "Sand";
        names[WATER] = "Water";
        names[FIRE] = "Fire";
        names[RAINBOW] = "Rainbow";
        names[CLEAR] = "Clear All";
        names[SMOKE] = "Smoke";
        names[SPONGE] = "Sponge";
        
        display = new SandDisplay("Falling Sand", numRows, numCols, names);
    }

    //called when the user clicks on a location using the given tool
    private void locationClicked(int row, int col, int tool)
    {
        
        grid[row][col] = tool;
     
        
    
    }

    //copies each element of grid into the display
    public void updateDisplay()
    {
     
     if(display.getTool() == CLEAR){
        for(int i = 0; i < grid.length; i++){
            for(int j = 0; j < grid[0].length; j++){
                grid[i][j] = 0;
            }
        }
     }
     //System.out.println(display.getTool());
     for(int i = 0; i < grid.length; i++){
          for(int j = 0; j < grid[0].length; j++){
              if(grid[i][j] == CLEAR){
                  for(int o = 0; o < grid.length; o++){
                      for(int p = 0; p < grid[0].length; p++){
                         grid[o][p] = 0; 
                      }
                  }
              }
          }
      }
      for(int i = 0; i < grid.length; i++){
          for(int j = 0; j < grid[0].length; j++){
              if(grid[i][j] == EMPTY){
                  display.setColor(i, j, new Color(0,0,0));
              }
              else if(grid[i][j] == METAL){
                  display.setColor(i, j, new Color(100, 100, 100));
              }
              else if(grid[i][j] == SAND){
                  display.setColor(i, j, new Color(239, 211, 111));
              }
              else if(grid[i][j] == FIRE){
                  int rand = (int)(Math.random() * 2);
                  if(rand == 0){
                    display.setColor(i, j, new Color(247, 55, 24));
                  }
                  else if(rand == 1){
                    display.setColor(i, j, new Color(251, 139, 35));  
                  }
              }
              else if(grid[i][j] == RAINBOW){
                  int rand = (int)(Math.random() * 7);
                  if(rand == 0){
                    display.setColor(i, j, new Color(255, 12, 18));
                  }
                  else if(rand == 1){
                    display.setColor(i, j, new Color(253, 174, 50));  
                  }
                  else if(rand == 2){
                    display.setColor(i, j, new Color(253, 251, 0));  
                  }
                  else if(rand == 3){
                    display.setColor(i, j, new Color(92, 255, 0));  
                  }
                  else if(rand == 4){
                    display.setColor(i, j, new Color(0, 207, 251));  
                  }
                  else if(rand == 5){
                    display.setColor(i, j, new Color(143, 0, 242));  
                  }
                  else if(rand == 6){
                    display.setColor(i, j, new Color(254, 1, 154));  
                  }
              }
             
              else if(grid[i][j] == WATER){
                  display.setColor(i, j, new Color(0, 0, 255));
              }
              else if(grid[i][j] == SMOKE){
                  display.setColor(i, j, new Color(194, 197, 204));
              }
              else if(grid[i][j] == SPONGE){
                  display.setColor(i, j, new Color(248, 237, 117));
              }
          }
       }
    }

    //called repeatedly.
    //causes one random particle to maybe do something.
    public void step()
    {
     
        int row = (int)(Math.random() * grid.length - 1);
        int column = (int)(Math.random() * grid[0].length);
        
        if(grid[row][column] == WATER && column == 0){
            grid[row][column] = grid[row][column + 1];
        }
        if(grid[row][column] == SMOKE && column == 0){
            grid[row][column] = grid[row][column + 1];
            
        }
        if(grid[row][column] == SMOKE && row == 0){
            grid[row][column] = EMPTY;
        }
        if(grid[row][column] == SAND){    
        if(grid[row + 1][column] == EMPTY) {
                    grid[row][column] = EMPTY;
                    grid[row + 1][column] = SAND;
            }
        }
        if(grid[row][column] == SAND && grid[row + 1][column] == WATER){
                grid[row][column] = WATER;
                grid[row + 1][column] = SAND;
        }
        
        if(grid[row][column] == WATER){
            
            int water = (int)(Math.random() * 3);
            if(row < grid.length - 1 && (column < grid[0].length - 1 && column > 0)){
                if(water == 0){
                if(grid[row + 1][column] == EMPTY) {
                grid[row][column] = EMPTY;
                grid[row + 1][column] = WATER;
                }
            }
            else if(water == 1){
                if(grid[row][column + 1] == EMPTY) {
                grid[row][column] = EMPTY;
                grid[row][column + 1] = WATER;
                }
            }
            else{
                if(grid[row][column - 1] == EMPTY) {
                grid[row][column] = EMPTY;
                grid[row][column - 1] = WATER;
                }
            }
            }
        }
        if(grid[row][column] == SMOKE){
            int fatRandom = (int)(Math.random() * 5);
            if(row < grid.length - 1 && (column < grid[0].length - 1 && column > 0)){
                if(fatRandom == 0){
                    if(grid[row - 1][column] == EMPTY){
                        grid[row][column] = EMPTY;
                        grid[row - 1][column] = SMOKE;
                    }
                }
                else if(fatRandom == 1){
                    if(grid[row - 1][column] == EMPTY){
                        grid[row][column] = EMPTY;
                        grid[row - 1][column] = SMOKE;
                    }
                }
                else if(fatRandom == 2){
                    if(grid[row - 1][column] == EMPTY){
                        grid[row][column] = EMPTY;
                        grid[row - 1][column] = SMOKE;
                    }
                }
                else if(fatRandom == 3){
                    if(grid[row][column + 1] == EMPTY){
                        grid[row][column] = EMPTY;
                        grid[row][column + 1] = SMOKE;
                    }
                }
                else if(fatRandom == 4){
                        if(grid[row][column - 1] == EMPTY){
                            grid[row][column] = EMPTY;
                            grid[row][column - 1] = SMOKE;
                
                    }      
                }
            }
        }
        if(grid[row][column] == SPONGE){
            grid[row][column] = SPONGE;
            if(grid[row + 1][column] == WATER){
                grid[row + 1][column] = EMPTY;
            }
            if(grid[row + 1][column + 1] == WATER){
                grid[row + 1][column + 1] = EMPTY;
            }
            if(grid[row + 1][column - 1] == WATER){
                grid[row + 1][column - 1] = EMPTY;
            }
            if(grid[row][column + 1] == WATER){
                grid[row][column + 1] = EMPTY;
            }
            if(grid[row][column - 1] == WATER){
                grid[row][column - 1] = EMPTY;
            }
            if(grid[row - 1][column - 1] == WATER){
                grid[row - 1][column - 1] = EMPTY;
            }
            if(grid[row - 1][column - 1] == WATER){
                grid[row - 1][column - 1] = EMPTY;
            }
            if(grid[row - 1][column] == WATER){
                grid[row - 1][column] = EMPTY;
            }
        }
    }

    //do not modify
    public void run()
    {
        while (true)
        {
            for (int i = 0; i < display.getSpeed(); i++)
                step();
            updateDisplay();
            display.repaint();
            display.pause(1);  //wait for redrawing and for mouse
            int[] mouseLoc = display.getMouseLocation();
            if (mouseLoc != null)  //test if mouse clicked
                locationClicked(mouseLoc[0], mouseLoc[1], display.getTool());
        }
    }
}